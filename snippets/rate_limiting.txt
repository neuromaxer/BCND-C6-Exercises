// rate limiting prevents rapid succession of malicious calls which exploit some contract vulnerability and give maintainers time to respond by e.g. temporarily disabling the contract

using SafeMath for uint256;
uint256 private enabled = block.timestamp;

modifier rateLimit(uint time) {
    require(block.timestamp >= enabled, "Rate limiting is in effect");
    enabled = enabled.add(time);
    _;
}

function safeWithdraw(uint256 amount) external rateLimit(30 minutes {
    // Withdraw code
}